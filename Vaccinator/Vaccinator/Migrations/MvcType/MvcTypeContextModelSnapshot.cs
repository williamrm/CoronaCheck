// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcType.Data;

namespace Vaccinator.Migrations.MvcType
{
    [DbContext(typeof(MvcTypeContext))]
    partial class MvcTypeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("MvcInjection.Models.Injection", b =>
                {
                    b.Property<int>("idInjection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_rappel")
                        .HasColumnType("datetime2");

                    b.HasKey("idInjection");

                    b.ToTable("Injection");
                });

            modelBuilder.Entity("MvcType.Models.Type", b =>
                {
                    b.Property<int>("idType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("VaccinidVaccin")
                        .HasColumnType("int");

                    b.Property<string>("maladie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idType");

                    b.HasIndex("VaccinidVaccin");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("MvcVaccin.Models.Vaccin", b =>
                {
                    b.Property<int>("idVaccin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("InjectionidInjection")
                        .HasColumnType("int");

                    b.Property<string>("marque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num_lot")
                        .HasColumnType("int");

                    b.HasKey("idVaccin");

                    b.HasIndex("InjectionidInjection");

                    b.ToTable("Vaccin");
                });

            modelBuilder.Entity("MvcType.Models.Type", b =>
                {
                    b.HasOne("MvcVaccin.Models.Vaccin", "Vaccin")
                        .WithMany()
                        .HasForeignKey("VaccinidVaccin");

                    b.Navigation("Vaccin");
                });

            modelBuilder.Entity("MvcVaccin.Models.Vaccin", b =>
                {
                    b.HasOne("MvcInjection.Models.Injection", "Injection")
                        .WithMany()
                        .HasForeignKey("InjectionidInjection");

                    b.Navigation("Injection");
                });
#pragma warning restore 612, 618
        }
    }
}
